// ReSharper disable CppInconsistentNaming
#pragma kernel UpdateMask
#pragma kernel ResetDrawnRegion
#pragma kernel ClipDrawnRegion
#pragma kernel ResetClippedRegion

#pragma enable_d3d11_debug_symbols

#include "Assets/RenderHell/Common/ShaderUtilities/ShaderUtilities.cginc"

RWTexture3D<float4> _SelectionMask;
int _SelectionMaskSize;

float3 _CursorNormalizedPos;
float _CursorNormalizedRadius;

float _Intersecting;
float _Drawing;
float _Clipping;
float _ErasingDrawn;

float4 _DrawingColor;

[numthreads(8,8,8)]
void UpdateMask (uint3 id : SV_DispatchThreadID)
{
    if (ClipId(id, _SelectionMaskSize) || when_eq(0.0f, _Intersecting))
    {
        return;
    }
    
    float4 storedColor = _SelectionMask[id];

    float4 newColor = lerp(_NoColor, _DrawingColor, _Drawing);
    newColor = lerp(newColor, _ClippedColor, _Clipping);
    newColor = lerp(newColor, _ClippedColor, IsClippedColor(storedColor));
    newColor = lerp(newColor, _NoColor, and(IsDrawnColor(storedColor), _ErasingDrawn));

    float3 normalizedPos = float3(id.x / (float) _SelectionMaskSize, id.y / (float) _SelectionMaskSize, id.z / (float) _SelectionMaskSize);
    float isInsideCursorSphere = IsInsideSphere(normalizedPos, _CursorNormalizedPos, _CursorNormalizedRadius);
    _SelectionMask[id] = lerp(storedColor, newColor, isInsideCursorSphere);
}

[numthreads(8,8,8)]
void ResetDrawnRegion (uint3 id : SV_DispatchThreadID)
{
    if (ClipId(id, _SelectionMaskSize))
    {
        return;
    }
    
    float4 storedColor = _SelectionMask[id];
    _SelectionMask[id] = lerp(storedColor, _NoColor, IsDrawnColor(storedColor));
}

[numthreads(8,8,8)]
void ClipDrawnRegion (uint3 id : SV_DispatchThreadID)
{
    if (ClipId(id, _SelectionMaskSize))
    {
        return;
    }
    
    float4 storedColor = _SelectionMask[id];
    _SelectionMask[id] = lerp(storedColor, _ClippedColor, IsDrawnColor(storedColor));
}

[numthreads(8,8,8)]
void ResetClippedRegion (uint3 id : SV_DispatchThreadID)
{
    if (ClipId(id, _SelectionMaskSize))
    {
        return;
    }
    
    float4 storedColor = _SelectionMask[id];
    _SelectionMask[id] = lerp(storedColor, _NoColor, IsClippedColor(storedColor));
}
